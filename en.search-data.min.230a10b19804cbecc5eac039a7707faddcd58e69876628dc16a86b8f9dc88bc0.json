[{"id":0,"href":"/posts/get_gcp_domain/","title":"Google Domainsで取得したドメインの更新","section":"Posts","content":"Google Domainsで取得したドメインの更新 #  2021年にGoogle Domainsで取得したドメインの有効期限が過ぎていたので，自分のブログサイトが閲覧できない状態になっていた． もちろんブログサイト自体は稼働し続けているため，ブラウザのURL欄にIPを打ち込めば閲覧することはできる． しかし，せっかく一度取得したドメインを失効したままにするのは格好が悪いため，ドメイン有効期限の更新を行う．\nGoogle Domainsでは,年額￥850から独自ドメインを取得することができる．(2022年3月時点)\n今回更新したドメインkazapps.infoでは，年額￥1,400（税別）であった． 独自ドメインの料金については，公式ページから検索することができる． Google Domains\n更新手順 #  更新手順は非常にシンプル.\n Googleからドメイン有効期限のお知らせメールが来ている場合  Googleから通知メールが来ている場合には，リンクをクリックすることで直接クレジットカード決済の画面に行くことができる． 今回は，1年間だけ有効期限を延長したいので，「年を追加」をクリックし，クレジットカード決済の確認を行う．\n  Google Domains管理ページから更新を行う場合  Google Domains管理ページの「マイドメイン\u0026gt;管理」ページにアクセスすると，次のような表示が出ている． 1年間だけ有効期限を延長したいので，「年を追加」からクレジットカード決済の画面に遷移する．\n 「年を追加」をクリックするとクレジットカード決済の画面に移動する． ブログサイトではサブドメイン (blog.kazapps.info) を利用しているため，DNSレコードの登録が必要だが， 今回は既に登録済みなので作業の必要はなかった． Google Domainsでは，有効期限が切れていても一定期間はドメインの設定を残してくれていたため助かった． ただし，一定期間が過ぎるとドメインは削除される．\n以下はGoogle Domainsからのメール通知の内容\n ドメインの更新は28日以内に行なってください．この期間を過ぎると，Googleのシステムからドメインが削除されます．\n 有効期限が過ぎた後の対応は以下のページにまとまっていた．\n  Google Domainsヘルプ: ドメイン登録の有効期限と削除  ざっくり次の様になっている\n   有効期限が切れてからの日数 状態     1-30日目 更新猶予期間．ドメイン登録の更新には追加料金はかからない．   31-60日目 ドメイン名の復元は可能だが，追加の料金がかかる   61日目 Googleに連絡がない場合，ドメインは削除．他の人が購入できる様になる．    "},{"id":1,"href":"/posts/ovs/","title":"Open vSwitchとDocker でネットワークの勉強","section":"Posts","content":"Open vSwitch と Docker でネットワークの勉強 #  マスタリングTCP/IPを一通り読んだので，実際にIPv4ネットワークがどのように動作しているのか手を動かしながら確認したいと思いました． 本記事で作成するネットワークでは，仮想ルータ４台に手作業でルーティングテーブルを設定することで，それぞれに対してパケットを送受信できることを目指しました． 今回はルーティングテーブルの手動設定を初めて体験したいという軽い気持ちで始めたため，ルータ+L2スイッチの実機を用意することは考えずに，仮想環境で実行します．\n環境 #   Apple M1 Mac(ホストマシン) UTM: VM(仮想マシン)を立ち上げるソフトウェア  Linux上で動作検証したかったため   Ubuntu 18.04 Server Docker  CentOS7 on dockerのルーティングテーブルを用いてルーティングを行う   Open vSwitch  オープンソースの仮想スイッチソフトウェア    ネットワーク構成図 #  今回作成したいネットワーク構成図\n 静的ルーティングの設定 #  Dockerコンテナ内でルーティングテーブルの設定を行う．\nip route add [ネットワーク部の指定] via [転送先IPの指定] dev [デバイス名] docker exec router1 ip route add 10.0.3.0/24 via 10.0.1.2 dev eth0 # router1-\u0026gt;router4(10.0.3.2) docker exec router2 ip route add 10.0.4.0/24 via 10.0.3.2 dev eth1 # router2-\u0026gt;router3(10.0.4.1) docker exec router3 ip route add 10.0.1.0/24 via 10.0.2.1 dev eth0 # router3-\u0026gt;router2(10.0.1.2) docker exec router4 ip route add 10.0.2.0/24 via 10.0.4.1 dev eth1 # router4-\u0026gt;router1(10.0.2.1) docker exec router1 ip route add 10.0.4.0/24 via 10.0.2.2 dev eth1 docker exec router2 ip route add 10.0.2.0/24 via 10.0.1.1 dev eth0 docker exec router3 ip route add 10.0.3.0/24 via 10.0.4.2 dev eth1 docker exec router4 ip route add 10.0.1.0/24 via 10.0.3.1 dev eth0 Githubリポジトリ #  OVSのブリッジ作成スクリプトとDockerfile\nhttps://github.com/takashimakazuki/ovs-network\n詰まった点 #   vyOSを使いたかったがARMマシンに対応したDockerコンテナの作成方法がわからなかったため断念→CentOSのコンテナを利用 CentOSをルータとして動作させるためにip_forward機能を有効にする必要があった  docker run --sysctl net.ipv4.ip_forward=1    "}]